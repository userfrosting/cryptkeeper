{# This partial template renders a table to be populated with rows via an AJAX request.
 # This extends a generic template for paginated tables.
 #
 # Note that this template contains a "skeleton" table with an empty table body, and then a block of Handlebars templates which are used
 # to render the table cells with the data from the AJAX request.
#}

{% extends "tables/table-paginated.html.twig" %}

{% block table %}
    <table id="{{table.id}}" class="tablesorter table table-bordered table-hover table-striped" data-sortlist="[[0, 0]]">
        <thead>
            <tr>
                <th class="sorter-metanum" data-column-name="completed_at" data-column-template="#transaction-table-column-completed-at">Date/Time <i class="fa fa-sort"></i></th>
                <th class="sorter-metatext" data-column-name="market" data-column-template="#transaction-table-column-market">Market <i class="fa fa-sort"></i></th>
                <th class="sorter-metanum" data-column-name="quantity" data-column-template="#transaction-table-column-quantity" data-filter="false">Quantity <i class="fa fa-sort"></i></th>
                <th class="sorter-metanum" data-column-name="gross_amount" data-column-template="#transaction-table-column-gross-amount" data-filter="false">Gross Cost/Proceeds <i class="fa fa-sort"></i></th>
                <th class="sorter-metanum" data-column-name="fee" data-column-template="#transaction-table-column-fee" data-filter="false">Fee <i class="fa fa-sort"></i></th>
                <th class="sorter-metatext" data-column-name="note" data-column-template="#transaction-table-column-note">Note <i class="fa fa-sort"></i></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
{% endblock %}

{% block table_cell_templates %}
    {# This contains a series of <script> blocks, each of which is a client-side Handlebars template.
     # Note that these are NOT Twig templates, although the syntax is similar.  We wrap them in the `verbatim` tag,
     # so that Twig will output them directly into the DOM instead of trying to treat them like Twig templates.
     #
     # These templates require handlebars-helpers.js, moment.js
    #}
    {% verbatim %}
    <script id="transaction-table-column-completed-at" type="text/x-handlebars-template">
        {{#if row.completed_at }}
        <td data-num="{{dateFormat row.completed_at format='x'}}">
            {{dateFormat row.completed_at format="dddd"}}<br>{{dateFormat row.completed_at format="MMM Do, YYYY h:mm a"}}
        {{ else }}
        <td data-num="0">
            <i>{% endverbatim %}{{translate("UNKNOWN")}}{% verbatim %}</i>
        {{/if }}
        </td>
    </script>

    <script id="transaction-table-column-market" type="text/x-handlebars-template">
        <td>
            {{row.price}} {{row.primary_currency_symbol}}/{{row.secondary_currency_symbol}}
        </td>
    </script>

    <script id="transaction-table-column-quantity" type="text/x-handlebars-template">
        <td>
            {{row.quantity}}
        </td>
    </script>

    <script id="transaction-table-column-gross-amount" type="text/x-handlebars-template">
        <td>
            {{#if row.price}}
                {{#ifx row.primary_currency_symbol '==' 'USD'}}
                    {{currencyUsdFormat row.gross_amount}}
                {{else}}
                    {{row.gross_amount}}
                {{/ifx}}
            {{else}}
                -
            {{/if}}
        </td>
    </script>

    <script id="transaction-table-column-fee" type="text/x-handlebars-template">
        <td>
            {{#if row.fee}}
                {{#ifx row.primary_currency_symbol '==' 'USD'}}
                    {{currencyUsdFormat row.fee}}
                {{else}}
                    {{row.fee}}
                {{/ifx}}
            {{else}}
                -
            {{/if}}
        </td>
    </script>

    <script id="transaction-table-column-note" type="text/x-handlebars-template">
        <td>
            <em>{{row.note}}</em>
        </td>
    </script>
    {% endverbatim %}
{% endblock %}
